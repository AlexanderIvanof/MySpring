<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

<aop:aspectj-autoproxy />
<context:component-scan base-package="com.alex.spring.aop" />

	<bean id="duke" class="com.alex.spring.beans.Juggler">
		<constructor-arg value="15" />
	</bean>

	<bean id="sonetMet" class="com.alex.spring.beans.Sonet" />
	<bean id="dan" class="com.alex.spring.beans.PoeticJuggler" scope="prototype">
		<constructor-arg ref="sonetMet" />
	</bean>

	<bean id="james" class="com.alex.spring.beans.PoeticJuggler">
		<constructor-arg value="12" />
		<constructor-arg ref="sonetMet" />
	</bean>

	<!-- Create Singleton -->
	<bean id="stage" class="com.alex.spring.beans.Stage"
		factory-method="getInstance" />

	<!-- Methods in this bean is call in intialization and before destroy bean 
		in container -->
	<bean id="auditorium" class="com.alex.spring.beans.Auditorium"
		init-method="turnOffTheLight" destroy-method="ternOnTheLight" />



	<bean id="kenny" class="com.alex.spring.beans.Instrumentalist">
		<property name="song" value="Hello darling." />
		<property name="instrument" ref="saxophone" />
	</bean>
	
	<bean name="saxophone" class="com.alex.spring.beans.Saxophone"></bean>
	<bean name="guitar" class="com.alex.spring.beans.Guitar"></bean>
	<bean name="drums" class="com.alex.spring.beans.Drums"></bean>

	<!-- Inject of collections -->
	<bean id="hank" class="com.alex.spring.beans.OneManBand">
		<property name="name" value="Hank" />
		<property name="list">
			<list>
				<ref bean="drums" />
				<ref bean="guitar" />
				<ref bean="saxophone" />
			</list>
		</property>
		<property name="songs">
			<props>
				<prop key="birth">Happy birthday to you!</prop>
				<prop key="metallica">Nothing else matters...</prop>
			</props>
		</property>
	</bean>
	<bean id="audience" class="com.alex.spring.aop.Audience" />
	
	
<!-- Add aspect in container -->
	<aop:config>
		<aop:aspect ref="audience">
			<aop:before method="takeSeats" pointcut="execution(* com.alex.spring.beans.Performer.perform(..))"/>
			<aop:before method="ternOffPhones" pointcut="execution(* com.alex.spring.beans.Performer.perform(..))"/>
			<aop:after-returning method="applaud" pointcut="execution(* com.alex.spring.beans.Performer.perform(..))"/>
			<aop:after-throwing method="demandRefound" pointcut="execution(* com.alex.spring.beans.Performer.perform(..))"/>
		</aop:aspect>
	</aop:config>
	
<!-- 	<bean id="listening" class="com.alex.spring.aop.Listening"/>
	you may to add @Component to Aspect-class and add 
	<context:component-scan base-package="com.alex.spring.aop" />
 -->
 
 <bean id="witharray" class="com.alex.spring.beans.BeanWithArray">
 	<property name="arr">
 		<array>
 			<ref bean="drums"/>
 			<ref bean="guitar"/>
 		</array>
 	</property>
 </bean>
 
 <bean class="com.alex.spring.beans.MyBeanFactory" />

</beans>
